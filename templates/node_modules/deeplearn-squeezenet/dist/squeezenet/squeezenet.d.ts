import { Tensor1D, Tensor3D } from 'deeplearn';
export declare type ActivationName = 'conv_1' | 'maxpool_1' | 'fire2' | 'fire3' | 'maxpool_2' | 'fire4' | 'fire5' | 'maxpool_3' | 'fire6' | 'fire7' | 'fire8' | 'fire9' | 'conv10';
export declare class SqueezeNet {
    private variables;
    private preprocessOffset;
    load(): Promise<void>;
    predict(input: Tensor3D): Tensor1D;
    predictWithActivation(input: Tensor3D, activationName?: ActivationName): {
        logits: Tensor1D;
        activation: Tensor3D;
    };
    private fireModule(input, fireId);
    getTopKClasses(logits: Tensor1D, topK: number): Promise<{
        [className: string]: number;
    }>;
    dispose(): void;
}
